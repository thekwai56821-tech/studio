'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating UI component style variations tailored to Myanmar cultural aesthetics.
 *
 * The flow takes a UI component type and a base style as input, and returns alternative style variations generated by an AI model.
 *
 * @interface GenerateComponentVariationInput - Defines the input schema for the flow, including the component type and base style.
 * @interface GenerateComponentVariationOutput - Defines the output schema for the flow, which includes the generated style variations.
 * @function generateComponentVariation - The main function that triggers the flow with the given input and returns the output.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

/**
 * Input schema for the generateComponentVariation flow.
 */
const GenerateComponentVariationInputSchema = z.object({
  componentType: z
    .string()
    .describe('The type of UI component to generate variations for (e.g., button, form, modal).'),
  baseStyle: z.string().describe('The base style of the UI component as a CSS string.'),
});

export type GenerateComponentVariationInput = z.infer<typeof GenerateComponentVariationInputSchema>;

/**
 * Output schema for the generateComponentVariation flow.
 */
const GenerateComponentVariationOutputSchema = z.object({
  styleVariations: z
    .array(z.string())
    .describe('An array of alternative style variations for the UI component.'),
});

export type GenerateComponentVariationOutput = z.infer<typeof GenerateComponentVariationOutputSchema>;

/**
 * Main function to generate UI component style variations.
 * @param input - The input containing the component type and base style.
 * @returns A promise resolving to the generated style variations.
 */
export async function generateComponentVariation(
  input: GenerateComponentVariationInput
): Promise<GenerateComponentVariationOutput> {
  return generateComponentVariationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateComponentVariationPrompt',
  input: {schema: GenerateComponentVariationInputSchema},
  output: {schema: GenerateComponentVariationOutputSchema},
  prompt: `You are a UI design expert specializing in Myanmar cultural aesthetics. Given a UI component type and a base style, generate alternative style variations that incorporate Myanmar cultural elements. Consider colors, typography, iconography, and layout principles.

Component Type: {{{componentType}}}
Base Style: {{{baseStyle}}}

Generate at least 3 alternative style variations as CSS strings. Return as JSON array of strings.
`,
});

const generateComponentVariationFlow = ai.defineFlow(
  {
    name: 'generateComponentVariationFlow',
    inputSchema: GenerateComponentVariationInputSchema,
    outputSchema: GenerateComponentVariationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
